<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>